<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>